---
interface Props {
  title: string
  titleClass?: string
  descriptions?: string[]
  items: {
    title: string
    content: string //Accepts HTML
  }[]
  accordionId?: string
  emphasis?: boolean
}

const {
  title,
  titleClass,
  descriptions,
  items,
  emphasis = true,
  accordionId = `accordion-${Math.random().toString(36).slice(2, 11)}`
} = Astro.props
---

<div class='row justify-content-md-between py-3 py-md-5'>
  <h2 class={titleClass}>{title}</h2>
  <div class='col-md-5'>
    {descriptions && descriptions.map((text) => <p class='' set:html={text} />)}
  </div>
  <div class='col-md-6 ps-md-0'>
    <div class='accordion accordion-flush mt-n1' id={accordionId}>
      {
        items.map((item, index) => {
          const id = `${accordionId}-collapse-${index}`
          const headingId = `${accordionId}-heading-${index}`
          const isFirst = index === 0
          return (
            <div class='accordion-item'>
              <div class='accordion-header' id={headingId}>
                <button
                  class={`accordion-button py-1  ${emphasis ? 'fw-bolder' : ''} ${!isFirst ? 'collapsed' : ''}`}
                  type='button'
                  data-bs-toggle='collapse'
                  data-bs-target={`#${id}`}
                  aria-expanded={isFirst ? 'true' : 'false'}
                  aria-controls={id}
                >
                  {item.title}
                </button>
              </div>
              <div
                id={id}
                class={`accordion-collapse collapse ${isFirst ? 'show' : ''}`}
                aria-labelledby={headingId}
                data-bs-parent={`#${accordionId}`}
              >
                <div class='accordion-body pb-1' set:html={item.content} />
              </div>
            </div>
          )
        })
      }
    </div>
  </div>
</div>

<style>
  /* .accordion-flush:first-child {
    border-top: 1px solid var(--bs-border-color);
  }

  .accordion-flush:last-child {
    border-bottom: 1px solid var(--bs-border-color);
  } */
  /* .accordion-item:first-child .accordion-header button {
    padding-top: 0 !important;
  } */
  /* .accordion .accordion-flush {
    margin-top: 3rem !important;
  } */

  .accordion-button:focus,
  .accordion-button:active,
  .accordion-button:focus-visible {
    outline: none;
    box-shadow: none;
  }

  /* .accordion-button:not(.collapsed) {
    background-color: var(--bs-light);
    color: var(--bs-body-color);
    box-shadow: none;
  } */

  .accordion-button:not(.collapsed) {
    background-color: transparent;
    color: var(--bs-primary);
    box-shadow: none;
  }

  .accordion-button {
    transition: background-color 0.25s ease;
  }
  /* .accordion-button:focus,
  .accordion-button:active {
    background-color: var(--bs-light);
  } */
</style>
