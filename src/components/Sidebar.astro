---
type Item = { href: string; label: string }

// current path, e.g. "/services/breeam-new-construction/"
const pathname = Astro.url.pathname

// always compare *pathnames* (works with relative or absolute hrefs)
const toPath = (href: string) => new URL(href, Astro.url).pathname

// active if exact match or descendant (since hrefs end with "/")
const isActiveHref = (href: string) => {
  const target = toPath(href) // e.g. "/services/breeam-new-construction/"
  return pathname === target || pathname.startsWith(target)
}

const items: Item[] = [
  { href: '/services/breeam-new-construction/', label: 'BREEAM NC' },
  { href: '/services/breeam-in-use/', label: 'BREEAM In-Use' },
  { href: '/services/breeam-for-logistics-warehouses/', label: 'BREEAM for logistics warehouses' },
  { href: '/services/leed-building-design-construction/', label: 'LEED BD+C' },
  { href: '/services/leed-operations-maintenance/', label: 'LEED O+M' },
  { href: '/services/eu-taxonomy/', label: 'EU Taxonomy' },
  {
    href: '/services/decarbonisation-of-existing-buildings/',
    label: 'Decarbonisation of existing buildings'
  },
  { href: '/services/building-simulations/', label: 'Building simulations' },
  { href: '/services/environmental-product-declaration/', label: 'EPD' }
]
---

<nav aria-label='Sidebar'>
  <ul class='nav flex-column mb-auto sticky-top sidebar' id='sidebar'>
    {
      items.map((item, i) => {
        const active = isActiveHref(item.href)
        return (
          <li class={`nav-item border-bottom${i === items.length - 1 ? '' : ''}`}>
            <a
              href={item.href}
              class={`nav-link ps-0 rounded-0 ${active ? 'active' : 'link-dark'}`}
              aria-current={active ? 'page' : undefined}
            >
              {item.label}
            </a>
          </li>
        )
      })
    }
  </ul>
</nav>

<style>
  #sidebar {
    top: 6.9rem;
  }
  .nav-link {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
  }
  .nav-item {
    transition: background-color 0.45s cubic-bezier(0.4, 0, 0.2, 1);
  }
  .nav-item:hover {
    background-color: var(--bs-light);
  }
</style>
